---
# tasks file for ansible-wireguard

- name: armv7l raspberry pi - installing raspberrypi-kernel-headers & dirmngr
  become: yes
  apt:
    state: latest
    update_cache: yes
    pkg:
      - raspberrypi-kernel-headers
      - libmnl-dev
      - libelf-dev
      - build-essential
  register: task_result

- name: Reboot immediately if there was a change.
  become: yes
  shell: "sleep 5 && reboot"
  async: 1
  poll: 0
  when: task_result is changed

- name: Wait for the reboot to complete if there was a change.
  wait_for_connection:
    connect_timeout: 10
    sleep: 5
    delay: 5
    timeout: 300
  when: task_result is changed


- name: Pi Zero - clone Wireguard source
  git:
    repo: https://git.zx2c4.com/WireGuard
    dest: ~/wireguard-source 
 

- name: Pi Zero - compiling WireGuard
  command: "{{ item }}"
  args:
    chdir: "~/wireguard-source/src"
    creates: ~/wireguard-source/src/tools/wg
  with_items:
    - "/usr/bin/make"
  when: ansible_architecture == 'armv6l'


- name: Pi Zero - installing WireGuard
  command: "{{ item }}"
  args:
    chdir: "~/wireguard-source/src"
    creates: /usr/bin/wg
  with_items:
    - "sudo /usr/bin/make install"
  when: ansible_architecture == 'armv6l'  



  #- name: Pi Zero - Build Wireguard from source
#  make:
#    chdir: ~/wireguard-source/src
#  when: ansible_architecture == 'armv6l'    

#- name: Pi Zero - Install Wireguard from source
#  make:
#    chdir: ~/wireguard-source/src
#    target: install
#  become: yes
#  when: ansible_architecture == 'armv6l' 